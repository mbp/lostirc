AC_INIT(src/gtkmm/main.cpp)
AM_INIT_AUTOMAKE(lostirc, 0.2.0pre)
AC_PROG_CXX
AC_PROG_INSTALL
AM_PROG_LIBTOOL
PKG_CHECK_MODULES(DEPS, gtkmm-2.0)
AC_SUBST(DEPS_CFLAGS)
AC_SUBST(DEPS_LIBS)

AC_CXX_HAVE_SSTREAM

# Add ./configure --enable-debug
AC_ARG_ENABLE(debug,
        [  --enable-debug          compile with debugging (for development)],
        debug=$enable_debug,
        debug=no
)
AC_MSG_CHECKING(for debugging)
if test "x$debug" = xyes; then
        AC_MSG_RESULT(yes)
        AC_DEFINE(DEBUG)
        CXXFLAGS="$CXXFLAGS -g -Wall"
else
        AC_MSG_RESULT(no)
        CXXFLAGS="$CXXFLAGS -s -Wall"
fi

# Add ./configure --enable-kde
AC_ARG_ENABLE(kde,
        [  --disable-kde           don't install KDE .desktop/menu entry],
        kde=$enable_kde,
        kde=yes
)
AC_MSG_CHECKING(whether to install KDE .desktop/menu entry)
if test "x$kde" = xyes; then
        AC_MSG_RESULT(yes)
        AM_CONDITIONAL(KDE, true)
else
        AC_MSG_RESULT(no)
        AM_CONDITIONAL(KDE, false)
fi

# Add ./configure --enable-gnome
AC_ARG_ENABLE(gnome,
        [  --disable-gnome         don't install GNOME .desktop/menu entry],
        gnome=$enable_gnome,
        gnome=yes
)
AC_MSG_CHECKING(whether to install GNOME .desktop/menu entry)
if test "x$gnome" = xyes; then
        AC_MSG_RESULT(yes)
        AM_CONDITIONAL(GNOME, true)
else
        AC_MSG_RESULT(no)
        AM_CONDITIONAL(GNOME, false)
fi

AC_OUTPUT(lostirc.spec Makefile src/Makefile src/libirc/Makefile src/gtkmm/Makefile)
